[
    {
        "data_flow_id": "100",
        "data_flow_group": "A1",
        "source_system": "MYSQL",
        "source_format": "cloudFiles",
        "source_details": {
            "source_database": "APP",
            "source_table": "CUSTOMERS",
            "source_path_dev": "tests/resources/data/customers",
            "source_schema_path": "tests/resources/schema/customer_schema.ddl",
            "source_metadata": {
                "include_autoloader_metadata_column": "True",
                "autoloader_metadata_col_name": "source_metadata",
                "select_metadata_cols": {
                    "input_file_name": "_metadata.file_name",
                    "input_file_path": "_metadata.file_path"
                }
            }
        },
        "bronze_database_dev": "bronze",
        "bronze_database_staging": "bronze",
        "bronze_database_prd": "bronze",
        "bronze_table": "customers_cdc",
        "bronze_reader_options": {
            "cloudFiles.format": "json",
            "cloudFiles.inferColumnTypes": "true",
            "cloudFiles.rescuedDataColumn": "_rescued_data"
        },
        "bronze_table_path_dev": "tests/resources/delta/customers",
        "bronze_table_properties": {
            "pipelines.autoOptimize.managed": "false",
            "pipelines.reset.allowed": "false"
        },
        "bronze_sinks":[{
            "name": "bronze_sink1",
            "format": "delta",
            "options": {
                "tablename": "bronze.customers_cdc"
            }
        },
        {"name": "bronze_sink2",
        "format": "delta",
        "options": {
            "tablename": "bronze.customers_cdc"
        }
        }
        ],
        "silver_database_dev": "silver",
        "silver_database_staging": "silver",
        "silver_database_prd": "silver",
        "silver_table": "customers",
        "silver_cdc_apply_changes": {
            "keys": [
                "id"
            ],
            "sequence_by": "operation_date",
            "scd_type": "1",
            "apply_as_deletes": "operation = 'DELETE'",
            "except_column_list": [
                "operation",
                "operation_date",
                "_rescued_data"
            ]
        },
        "silver_table_path_dev": "tests/resources/data/silver/customers",
        "silver_table_properties": {
            "pipelines.autoOptimize.managed": "false",
            "pipelines.reset.allowed": "false",
            "pipelines.autoOptimize.zOrderCols": "id,email"
        },
        "silver_transformation_json_dev": "tests/resources/silver_transformations.json",
        "silver_data_quality_expectations_json_dev": "tests/resources/dqe/customers/silver_data_quality_expectations.json",
        "silver_sinks":[{
            "name": "silver_sink",
            "format": "delta",
            "options": {
                "tablename": "silver.customers_cdc"
            }
        } ,
        {
            "name": "silver_customer_sink",
            "format": "kafka",
            "options": {
                "kafka_sink_servers_secret_scope_name":"kafka_sink_servers_secret_scope_name",
                "kafka_sink_servers_secret_scope_key":"kafka_sink_servers_secret_scope_key",
                "kafka.security.protocol":"PLAINTEXT",
                "startingOffsets":"earliest",
                "checkpointLocation":"{dbfs_path}/integration_tests/kafka_test_checkpoint/",
                "topic":"{kafka_sink_topic}"
            },
            "select_exp":["value","topic","timestamp"],
            "where_clause":["value is not null"]                       
        }           
    ]

    }
]